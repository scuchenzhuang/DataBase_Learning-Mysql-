Write a SQL query to get the second highest salary from the Employee table.

+----+--------+
| Id | Salary |
+----+--------+
| 1  | 100    |
| 2  | 200    |
| 3  | 300    |
+----+--------+
For example, given the above Employee table, the query should return 200 as the second highest salary. If there is no second highest salary, then the query should return null.

+---------------------+
| SecondHighestSalary |
+---------------------+
| 200                 |
+---------------------+

# Write your MySQL query statement below
SELECT
IFNULL(
    (SELECT DISTINCT Salary
    FROM Employee 
    ORDER BY Salary Desc
    limit 1 offset 1),  NULL) 
    as SecondHighestSalary
    
    
    
    
    
 Solution:
  Group by   vs   order  by
order by 排序查询、asc升序、desc降序
示例：
select * from 学生表 order by 年龄 查询学生表信息、按年龄的升序(默认、可缺省、从低到高)排列显示
也可以多条件排序、 比如 order by 年龄,成绩 desc 按年龄升序排列后、再按成绩降序排列

group by 分组查询、having 只能用于group by子句、作用于组内，having条件子句可以直接跟函数表达式。使用group by 子句的查询语句需要使用聚合函数。
示例：
select 学号,SUM(成绩) from 选课表 group by 学号 按学号分组、查询每个学号的总成绩

select 学号,AVG(成绩) from 选课表 
group by 学号
having AVG(成绩)>(select AVG(成绩) from 选课表 where 课程号='001')
order by AVG(成绩) desc
查询平均成绩大于001课程平均成绩的学号、并按平均成绩的降序排列
Limit offset
Limit n,m   跳过n条数据，读取m条数据（从n+1开始）
Limit n offset m  从第m+1条数据开始读n条数据
As (使用别名)
Select * from table * as (别名)
If   vs   when   vs   ifnull
1.if
表达式：IF( expr1 , expr2 , expr3 )
expr1条件，条件为true，则值是expr2 ，false，值就是expr3 

2.case when
case 列名
when 条件 then 结果
else 其它结果
end 别名
 3.ifnull
IFNULL( expr1 , expr2 )
在 expr1 的值不为 NULL的情况下都返回 expr1，否则返回 expr2
