Write a SQL query to rank scores. If there is a tie between two scores, both should have the same ranking. Note that after a tie, the next ranking number should be the next consecutive integer value. In other words, there should be no "holes" between ranks.

+----+-------+
| Id | Score |
+----+-------+
| 1  | 3.50  |
| 2  | 3.65  |
| 3  | 4.00  |
| 4  | 3.85  |
| 5  | 4.00  |
| 6  | 3.65  |
+----+-------+
For example, given the above Scores table, your query should generate the following report (order by highest score):

+-------+------+
| Score | Rank |
+-------+------+
| 4.00  | 1    |
| 4.00  | 1    |
| 3.85  | 2    |
| 3.65  | 3    |
| 3.65  | 3    |
| 3.50  | 4    |
+-------+------+

# Write your MySQL query statement below
SELECT a.Score as Score,(Select count(distinct b.Score) from Scores b where b.Score >=a.Score) as Rank 
from Scores a 
order by Score desc

Count
Count(distinct b.Score) 此处返回的是查询出来的数字，比如有100个不同的成绩，那么就返回100，count经常用来返回数字的个数
同时子查询的答案可以作为一个列列出来，只要前面加上select
